apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: { { .Values.appname } }
  name: { { .Values.appname } }
  namespace: { { .Values.namespace.name } }
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: { { .Values.appname } }
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: { { .Values.appname } }
    spec:
      containers:
      - image: { { .Values.image.dockerRegistry } }/{{.Values.image.repository}}:{{.Values.image.tag}}
        imagePullPolicy: { { .Values.image.pullPolicy } }
        name: { { .Values.appname } }
        ports:
        - containerPort: { { .Values.containerPort } }
        livenessProbe:
          httpGet:
            path: { { .Values.livenessProbe.path } }
            port: { { .Values.containerPort } }
        readinessProbe:
            httpGet:
              path: { { .Values.readinessProbe.path } }
              port: { { .Values.containerPort } }
        resources:
            requests:
              memory: { { Values.resources.requests.memory } }
              cpu: { { Values.resources.requests.cpu } }
            limits:
              memory: { { Values.resources.limit.memory } }
              cpu: { { Values.resources.limit.cpu } }